----------------------------------------------------------------------------------------------------------------------
-------------------------------------------****DJANGO MODEL COMPLETE NOTE****------------------------------------------
----------------------------------------------------------------------------------------------------------------------

Every individual Django App has its own model file for database management:
➡ Example:  first_app/models.py

------------------------------------ first_app/models.py ---------------------------------------
from django.db import models

# Create your models here.

class Musician(models.Model):
    # id=models.AutoField(primary_key=True)  ← Django takes it automatically
    first_name = models.CharField(max_length=50)   # can use (null=True, blank=True)
    last_name  = models.CharField(max_length=50)
    instrument = models.CharField(max_length=50)

    # show the variable in admin or shell:
    def __str__(self):
        return self.first_name + " " + self.last_name


class Album(models.Model):
    artist = models.ForeignKey('Musician', on_delete=models.CASCADE)  # ForeignKey Relation
    name = models.CharField(max_length=50)
    release_date = models.DateField()
    num_star = models.IntegerField()

----------------------------------------------------------------------------------------------------------------------
-------------------------------------------MODEL COMMANDS--------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------

After creating or changing model fields:

>>> python manage.py makemigrations first_app     # (App Name)
>>> python manage.py migrate                      # Apply database migration

----------------------------------------------------------------------------------------------------------------------
-------------------------------------------MODEL OBJECT ACCESS----------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------

>>> python manage.py shell      # open Django interactive shell

then:

>>> from first_app.models import Musician

✅ Show table data:
>>> print(Musician.objects.all())

✅ Insert data into table:
>>> obj = Musician(first_name='Md.Ashraful', last_name='Shuvo', instrument='Guitar')
>>> obj.save()

✅ OR shorthand:
>>> Musician.objects.create(first_name='Jane', last_name='Smith', instrument='Piano')

✅ Show all:
>>> print(Musician.objects.all())
<QuerySet [<Musician: Md.Ashraful Shuvo>, <Musician: Jane Smith>]>

✅ Get single record (by primary key):
>>> Musician.objects.get(pk=1)

✅ Filter data:
>>> Musician.objects.filter(instrument__icontains='guitar')

✅ Count total records:
>>> Musician.objects.count()

✅ Delete record:
>>> Musician.objects.filter(first_name='John').delete()

✅ Create Album related to Musician:
>>> artist = Musician.objects.first()
>>> Album.objects.create(artist=artist, name='First Album', release_date='2023-01-01', num_star=5)


----------------------------------------------------------------------------------------------------------------------
---------------------------------------------REGISTER MODEL TO ADMIN SITE----------------------------------------------
----------------------------------------------------------------------------------------------------------------------

First, register your models in => first_app/admin.py

--------------------------------- first_app/admin.py ---------------------------------
from django.contrib import admin
from first_app.models import Musician, Album

admin.site.register(Musician)
admin.site.register(Album)
---------------------------------------------------------------------------------------

Then create admin superuser:
>>> python manage.py createsuperuser

✅ Complete username, email, and password setup  
✅ Run server and go to: 127.0.0.1:8000/admin  
✅ Login using created credentials

----------------------------------------------------------------------------------------------------------------------
-----------------------------------------MODEL WITH CHOICE FIELD (RATING EXAMPLE)--------------------------------------
----------------------------------------------------------------------------------------------------------------------

------------------------------------ first_app/models.py ---------------------------------------
from django.db import models

class Musician(models.Model):
    first_name = models.CharField(max_length=50)
    last_name  = models.CharField(max_length=50)
    instrument = models.CharField(max_length=50)

    def __str__(self):
        return self.first_name + " " + self.last_name


class Album(models.Model):
    artist = models.ForeignKey('Musician', on_delete=models.CASCADE)
    name = models.CharField(max_length=50)
    release_date = models.DateField()

    # Rating options:
    rating = (
        (1, "Bad"),
        (2, "Not Bad"),
        (3, "Good"),
        (4, "Very Good"),
        (5, "Awesome"),
    )
    num_star = models.IntegerField(choices=rating)

    def __str__(self):
        return self.name + " , Rating: " + str(self.num_star)
---------------------------------------------------------------------------------------

>>> python manage.py makemigrations first_app 
>>> python manage.py migrate

----------------------------------------------------------------------------------------------------------------------
---------------------------------------MODEL DATA TO TEMPLATE (MVT STRUCTURE)------------------------------------------
----------------------------------------------------------------------------------------------------------------------

✅ Use print variables:
{{ variable_name }}

✅ Template logic supports:
{% if %}, {% else %}, {% for %}, {% comment %}, etc.

------------------------------------ first_app/views.py ---------------------------------------
from django.shortcuts import render
from first_app.models import Musician, Album

def index(request):
    # SELECT * FROM Musician ORDER BY first_name  ← SQL equivalent
    musician_list = Musician.objects.order_by('first_name')
    dictionary = {"Musician_List": "All Musician's", "musician": musician_list}
    return render(request, 'first_app/index.html', context=dictionary)

----------------------------------------------------------------------------------------------------------------------
----------------------------------------- TEMPLATE: first_app/templates/first_app/index.html --------------------------
----------------------------------------------------------------------------------------------------------------------
<!DOCTYPE html>
{% load static %}
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{{Musician_List}}</title>
    <link rel="stylesheet" href="{% static 'css/color.css' %}">
</head>
<body>
    <h1 align="center">{{Musician_List}}</h1>
    <table align="center" style="border:1px solid black; border-radius:10px;">
        <thead>
            <tr>
                <th>First Name</th>
                <th>Last Name</th>
                <th>Instrument</th>
            </tr>
        </thead>
        <tbody>
            {% for row in musician %}
            <tr>
                <td>{{row.first_name}}</td>
                <td>{{row.last_name}}</td>
                <td>{{row.instrument}}</td>
            </tr>
            {% endfor %}
        </tbody>
    </table>
</body>
</html>

----------------------------------------------------------------------------------------------------------------------
------------------------------------------END OF MODEL SECTION---------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------
